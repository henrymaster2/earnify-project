generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model User {
  id         Int      @id @default(autoincrement())
  name       String
  email      String   @unique
  password   String
  coins      Int      @default(0)
  createdAt  DateTime @default(now())

  isAdmin    Boolean  @default(false) 

  referrerId Int?
  referrer   User?    @relation("Referrals", fields: [referrerId], references: [id])
  referrals  User[]   @relation("Referrals")

  adWatches     AdWatch[]
  applications  JobApplication[]
}

model AdWatch {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int

  adId      Int
  watchedAt DateTime @default(now())

  @@unique([userId, adId])
  @@index([userId, watchedAt])
}

model JobAd {
  id          Int      @id @default(autoincrement())
  title       String
  description String
  company     String
  location    String
  imageBase64 String?
  createdAt   DateTime @default(now())

  applications JobApplication[]
}

model JobApplication {
  id        Int      @id @default(autoincrement())
  jobId     Int
  userId    Int
  resume    String
  status    String   @default("pending")
  createdAt DateTime @default(now())

  job       JobAd    @relation(fields: [jobId], references: [id])
  user      User     @relation(fields: [userId], references: [id])

  @@unique([userId, jobId])
}

